openapi: 3.0.0
info:
  title: Ultimate Frisbee Manager API
  description: API pour la gestion des entraînements et exercices de Ultimate Frisbee
  version: 1.0.0
  contact:
    name: Équipe de développement
servers:
  - url: http://localhost:3001/api
    description: Serveur de développement local

paths:
  /entrainements:
    get:
      summary: Liste tous les entraînements
      tags:
        - Entraînements
      responses:
        '200':
          description: Liste des entraînements récupérée avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entrainement'
        '500':
          description: Erreur serveur

    post:
      summary: Crée un nouvel entraînement
      tags:
        - Entraînements
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entrainement'
      responses:
        '201':
          description: Entraînement créé avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entrainement'
        '400':
          description: Données invalides
        '500':
          description: Erreur serveur

  /entrainements/{id}:
    get:
      summary: Récupère un entraînement spécifique
      tags:
        - Entraînements
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Entraînement récupéré avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entrainement'
        '404':
          description: Entraînement non trouvé
        '500':
          description: Erreur serveur

    put:
      summary: Met à jour un entraînement existant
      tags:
        - Entraînements
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Entrainement'
      responses:
        '200':
          description: Entraînement mis à jour avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entrainement'
        '404':
          description: Entraînement non trouvé
        '500':
          description: Erreur serveur

    delete:
      summary: Supprime un entraînement existant
      tags:
        - Entraînements
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Entraînement supprimé avec succès
        '404':
          description: Entraînement non trouvé
        '500':
          description: Erreur serveur

  /exercices:
    get:
      summary: Liste tous les exercices
      tags:
        - Exercices
      responses:
        '200':
          description: Liste des exercices récupérée avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Exercice'
        '500':
          description: Erreur serveur

    post:
      summary: Crée un nouvel exercice
      tags:
        - Exercices
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Exercice'
      responses:
        '201':
          description: Exercice créé avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exercice'
        '400':
          description: Données invalides
        '500':
          description: Erreur serveur

  /exercices/{id}:
    get:
      summary: Récupère un exercice spécifique
      tags:
        - Exercices
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Exercice récupéré avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exercice'
        '404':
          description: Exercice non trouvé
        '500':
          description: Erreur serveur

    put:
      summary: Met à jour un exercice existant
      tags:
        - Exercices
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Exercice'
      responses:
        '200':
          description: Exercice mis à jour avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Exercice'
        '404':
          description: Exercice non trouvé
        '500':
          description: Erreur serveur

    delete:
      summary: Supprime un exercice existant
      tags:
        - Exercices
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Exercice supprimé avec succès
        '404':
          description: Exercice non trouvé
        '500':
          description: Erreur serveur

  /tags:
    get:
      summary: Liste tous les tags
      tags:
        - Tags
      responses:
        '200':
          description: Liste des tags récupérée avec succès
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
        '500':
          description: Erreur serveur

    post:
      summary: Crée un nouveau tag
      tags:
        - Tags
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
      responses:
        '201':
          description: Tag créé avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '400':
          description: Données invalides
        '500':
          description: Erreur serveur

  /tags/{id}:
    get:
      summary: Récupère un tag spécifique
      tags:
        - Tags
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Tag récupéré avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '404':
          description: Tag non trouvé
        '500':
          description: Erreur serveur

    put:
      summary: Met à jour un tag existant
      tags:
        - Tags
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
      responses:
        '200':
          description: Tag mis à jour avec succès
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        '404':
          description: Tag non trouvé
        '500':
          description: Erreur serveur

    delete:
      summary: Supprime un tag existant
      tags:
        - Tags
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Tag supprimé avec succès
        '404':
          description: Tag non trouvé
        '500':
          description: Erreur serveur

components:
  schemas:
    Entrainement:
      type: object
      required:
        - title
        - date
      properties:
        id:
          type: string
          example: "60d21b4967d0d8992e610c85"
        title:
          type: string
          example: "Entraînement défensif avancé"
        description:
          type: string
          example: "Séance d'entraînement focalisée sur les techniques défensives"
        date:
          type: string
          format: date-time
          example: "2025-08-10T14:00:00Z"
        duration:
          type: integer
          description: Durée en minutes
          example: 90
        intensity:
          type: string
          enum: [low, medium, high]
          example: "medium"
        phases:
          type: array
          items:
            $ref: '#/components/schemas/Phase'

    Phase:
      type: object
      required:
        - title
        - duration
      properties:
        id:
          type: string
          example: "60d21b4967d0d8992e610c86"
        title:
          type: string
          example: "Échauffement"
        description:
          type: string
          example: "Course légère et étirements"
        duration:
          type: integer
          description: Durée en minutes
          example: 15
        exercices:
          type: array
          items:
            $ref: '#/components/schemas/PhaseExercice'

    PhaseExercice:
      type: object
      required:
        - exerciceId
      properties:
        id:
          type: string
          example: "60d21b4967d0d8992e610c87"
        exerciceId:
          type: string
          example: "60d21b4967d0d8992e610c88"
        duration:
          type: integer
          description: Durée en minutes
          example: 10
        variables:
          type: object
          description: Variables spécifiques à l'exercice
          additionalProperties: true

    Exercice:
      type: object
      required:
        - title
      properties:
        id:
          type: string
          example: "60d21b4967d0d8992e610c88"
        title:
          type: string
          example: "Force de marquage"
        description:
          type: string
          example: "Exercice pour améliorer la technique de marquage"
        duration:
          type: integer
          description: Durée en minutes
          example: 15
        minPlayers:
          type: integer
          example: 4
        maxPlayers:
          type: integer
          example: 12
        materials:
          type: array
          items:
            type: string
          example: ["disques", "plots"]
        variablesSchema:
          type: object
          description: Schéma des variables configurables
          additionalProperties: true
        variablesText:
          type: string
          example: "Nombre de joueurs: [4-12]"
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          example: [{ "id": "60d21b4967d0d8992e610c89", "name": "Défense", "color": "#ff0000" }]

    Tag:
      type: object
      required:
        - name
      properties:
        id:
          type: string
          example: "60d21b4967d0d8992e610c89"
        name:
          type: string
          example: "Défense"
        color:
          type: string
          example: "#ff0000"
